{
  "components": [
    {
      "name": "Control registers",
      "type": "control",
      "double_precision": false,
      "elements": [
        {
          "name": "PC",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "EPC",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "CAUSE",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "BADVADDR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "STATUS",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "HI",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "LO",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FIR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FCSR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FCCR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FEXR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "Integer registers",
      "type": "integer",
      "double_precision": false,
      "elements": [
        {
          "name": "zero",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "at",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "v0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "v1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "a0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "a1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "a2",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "a3",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t2",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t3",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t4",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t5",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t6",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t7",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s2",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s3",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s4",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s5",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s6",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s7",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t8",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t9",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "k0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "k1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "gp",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "sp",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "fp",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "ra",
          "nbits": "32",
          "value": "0xFFFFFFFF",
          "default_value": "0xFFFFFFFF",
          "properties": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "Simple floating point registers",
      "type": "floating point",
      "double_precision": false,
      "elements": [
        {
          "name": "f0",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f1",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f2",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f3",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f4",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f5",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f6",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f7",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f8",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f9",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f10",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f11",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f12",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f13",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f14",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f15",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f16",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f17",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f18",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f19",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f20",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f21",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f22",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f23",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f24",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f25",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f26",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f27",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f28",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f29",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f30",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "f31",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "Double floating point registers",
      "type": "floating point",
      "double_precision": true,
      "elements": [
        {
          "name": "FP0",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f0",
            "f1"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP2",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f2",
            "f3"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP4",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f4",
            "f5"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP6",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f6",
            "f7"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP8",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f8",
            "f9"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP10",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f10",
            "f11"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP12",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f12",
            "f13"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP14",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f14",
            "f15"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP16",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f16",
            "f17"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP18",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f18",
            "f19"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP20",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f20",
            "f21"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP22",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f22",
            "f23"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP24",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f24",
            "f25"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP26",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f26",
            "f27"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP28",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f28",
            "f29"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP30",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "f30",
            "f31"
          ],
          "properties": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "instructions": [
    {
      "name": "abs.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "abs.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "abs.s $fd $fs",
      "co": "010001",
      "cop": "00000000101",
      "nwords": 1,
      "fields": [
        {
          "name": "abs.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000101"
        }
      ],
      "definition": "fd = Math.abs(fs)"
    },
    {
      "name": "abs.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "abs.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "abs.d $fd $fs",
      "co": "010001",
      "cop": "00001000101",
      "nwords": 1,
      "fields": [
        {
          "name": "abs.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000101"
        }
      ],
      "definition": "fd = Math.abs(fs)"
    },
    {
      "name": "add",
      "type": "Arithmetic integer",
      "co": "000000",
      "cop": "100000",
      "nwords": 1,
      "signature_definition": "F0 $F3 $F2 $F1",
      "signature": "add,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "add $reg3 $reg2 $reg1",
      "fields": [
        {
          "name": "add",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100000"
        }
      ],
      "definition": "assert(((reg1 >> 0) >= 0 && (reg2 >> 0) <= 0) || ((reg1 >> 0) <= 0 && (reg2 >> 0) >= 0) || ((reg1 >> 0) > 0 && (reg2 >> 0) > 0 && (((reg1 >> 0) + (reg2 >> 0)) >> 0) > 0) || ((reg1 >> 0) < 0 && (reg2 >> 0) < 0 && (((reg1 >> 0) + (reg2 >> 0)) >> 0) < 0); \"Integer Overflow\")\nreg3=reg1+reg2;\ncheck_stack_limit(reg3.name; sp.name; reg3)"
    },
    {
      "name": "add.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "add.s,$SFP-Reg,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "add.s $fd $fs $ft",
      "co": "010001",
      "cop": "00000000000",
      "nwords": 1,
      "fields": [
        {
          "name": "add.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000000"
        }
      ],
      "definition": "fd = fs + ft"
    },
    {
      "name": "add.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "add.d,$DFP-Reg,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "add.d $fd $fs $ft",
      "co": "010001",
      "cop": "00001000000",
      "nwords": 1,
      "fields": [
        {
          "name": "add.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000000"
        }
      ],
      "definition": "fd = fs + ft"
    },
    {
      "name": "addi",
      "type": "Arithmetic integer",
      "co": "001000",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "addi,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "addi $reg2 $reg1 val",
      "fields": [
        {
          "name": "addi",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "assert(((reg1 >> 0) >= 0 && (val >> 0) <= 0) || ((reg1 >> 0) <= 0 && (val >> 0) >= 0) || ((reg1 >> 0) > 0 && (val >> 0) > 0 && (((reg1 >> 0) + (val >> 0)) >> 0) > 0) || ((reg1 >> 0) < 0 && (val >> 0) < 0 && (((reg1 >> 0) + (val >> 0)) >> 0) < 0); \"Integer Overflow\")\nreg2=reg1+val;\ncheck_stack_limit(reg2.name; sp.name; reg2);"
    },
    {
      "name": "addiu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "addiu,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "addiu $reg2 $reg1 val",
      "co": "001001",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "addiu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg2=reg1+val;\ncheck_stack_limit(reg2.name; sp.name; reg2)"
    },
    {
      "name": "addu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "addu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "addu $reg3 $reg1 $reg2",
      "co": "000000",
      "cop": "100001",
      "nwords": 1,
      "fields": [
        {
          "name": "addu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100001"
        }
      ],
      "definition": "reg3=reg1+reg2;\ncheck_stack_limit(reg3.name; sp.name; reg3)"
    },
    {
      "name": "and",
      "type": "Logic",
      "co": "000000",
      "cop": "100100",
      "nwords": 1,
      "signature_definition": "F0 $F3 $F2 $F1",
      "signature": "and,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "and $reg3 $reg2 $reg1",
      "fields": [
        {
          "name": "and",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100100"
        }
      ],
      "definition": "reg3=reg1&reg2;\ncheck_stack_limit(reg3.name; sp.name; reg3)"
    },
    {
      "name": "andi",
      "type": "Logic",
      "co": "001100",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "andi,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "andi $reg2 $reg1 val",
      "fields": [
        {
          "name": "andi",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg2=reg1&(val>>>0);\ncheck_stack_limit(reg2.name; sp.name; reg2)"
    },
    {
      "name": "bc",
      "type": "Unconditional bifurcation",
      "signature_definition": "F0 F1",
      "signature": "bc,offset_words",
      "signatureRaw": "bc off",
      "co": "110010",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "bc",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 25,
          "stopbit": 0
        }
      ],
      "definition": "PC=PC+((off << 6) >> 4)"
    },
    {
      "name": "bc1eqz",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F2 F3",
      "signature": "bc1eqz,$SFP-Reg,offset_words",
      "signatureRaw": "bc1eqz $ft off",
      "co": "010001",
      "cop": "01001",
      "nwords": 1,
      "fields": [
        {
          "name": "bc1eqz",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "01001"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(ft==0){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bc1nez",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F2 F3",
      "signature": "bc1nez,$SFP-Reg,offset_words",
      "signatureRaw": "bc1nez $ft off",
      "co": "010001",
      "cop": "01101",
      "nwords": 1,
      "fields": [
        {
          "name": "bc1nez",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "01101"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(ft!=0){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "beq",
      "type": "Conditional bifurcation",
      "co": "000100",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 F3",
      "signature": "beq,$INT-Reg,$INT-Reg,offset_words",
      "signatureRaw": "beq $reg1 $reg2 off",
      "fields": [
        {
          "name": "beq",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(reg1 == reg2){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "beqz",
      "type": "Conditional bifurcation",
      "co": "000100",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F1 F2",
      "signature": "beqz,$INT-Reg,offset_words",
      "signatureRaw": "beqz $reg1 off",
      "fields": [
        {
          "name": "beqz",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(reg1 == 0){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bgez",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F1 F3",
      "signature": "bgez,$INT-Reg,offset_words",
      "signatureRaw": "bgez $rs off",
      "co": "000001",
      "cop": "00001",
      "nwords": 1,
      "fields": [
        {
          "name": "bgez",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 20,
          "stopbit": 16,
          "valueField": "00001"
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if((rs >> 0) >= 0) {PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bgezal",
      "type": "Function call",
      "signature_definition": "F0 $F1 F3",
      "signature": "bgezal,$INT-Reg,offset_words",
      "signatureRaw": "bgezal $rs off",
      "co": "000001",
      "cop": "10001",
      "nwords": 1,
      "fields": [
        {
          "name": "bgezal",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 20,
          "stopbit": 16,
          "valueField": "10001"
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "ra=PC; if(rs >> 0 >=0){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bgtz",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F1 F2",
      "signature": "bgtz,$INT-Reg,offset_words",
      "signatureRaw": "bgtz $rs off",
      "co": "000111",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "bgtz",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(rs >> 0 > 0) {PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "blez",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F1 F2",
      "signature": "blez,$INT-Reg,offset_words",
      "signatureRaw": "blez $rs off",
      "co": "000110",
      "cop": null,
      "nwords": 1,
      "fields": [
        {
          "name": "blez",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(rs >> 0 <= 0) {PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bltz",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F1 F3",
      "signature": "bltz,$INT-Reg,offset_words",
      "signatureRaw": "bltz $rs off",
      "co": "000001",
      "cop": "00000",
      "nwords": 1,
      "fields": [
        {
          "name": "bltz",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 20,
          "stopbit": 16,
          "valueField": "00000"
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(rs >> 0 < 0) {PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bne",
      "type": "Conditional bifurcation",
      "co": "000101",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 F3",
      "signature": "bne,$INT-Reg,$INT-Reg,offset_words",
      "signatureRaw": "bne $reg1 $reg2 off",
      "fields": [
        {
          "name": "bne",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(reg1 != reg2){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bnez",
      "type": "Conditional bifurcation",
      "co": "000101",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 F2",
      "signature": "bnez,$INT-Reg,offset_words",
      "signatureRaw": "bnez $reg1 off",
      "fields": [
        {
          "name": "bnez",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(reg1 != 0){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "cvt.d.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "cvt.d.s,$DFP-Reg,$SFP-Reg",
      "signatureRaw": "cvt.d.s $fd $fs",
      "co": "010001",
      "cop": "00000100001",
      "nwords": 1,
      "fields": [
        {
          "name": "cvt.d.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100001"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "cvt.d.w",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "cvt.d.w,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "cvt.d.w $fd $fs",
      "co": "010001",
      "cop": "00001100001",
      "nwords": 1,
      "fields": [
        {
          "name": "cvt.d.w",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100001"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "cvt.s.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F2 $F3",
      "signature": "cvt.s.d,$SFP-Reg,$DFP-Reg",
      "signatureRaw": "cvt.s.d $fs $fd",
      "co": "010001",
      "cop": "00001100000",
      "nwords": 1,
      "fields": [
        {
          "name": "cvt.s.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100000"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "cvt.s.w",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "cvt.s.w,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "cvt.s.w $fd $fs",
      "co": "010001",
      "cop": "00010100000",
      "nwords": 1,
      "fields": [
        {
          "name": "cvt.s.w",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00010"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100000"
        }
      ],
      "definition": "fd = parseFloat(fs)"
    },


    {
      "name": "cvt.w.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "cvt.w.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "cvt.w.s $fd $fs",
      "co": "010001",
      "cop": "00000100100",
      "nwords": 1,
      "fields": [
        {
          "name": "cvt.w.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100100"
        }
      ],
      "definition": "fd = parseInt(fs)"
    },
    {
      "name": "cvt.w.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "cvt.w.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "cvt.w.d $fd $fs",
      "co": "010001",
      "cop": "00001100100",
      "nwords": 1,
      "fields": [
        {
          "name": "cvt.w.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100100"
        }
      ],
      "definition": "fd = parseInt(fs)"
    },



    {
      "name": "div",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "div,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "div $rd $rs $rt",
      "co": "000000",
      "cop": "00010011010",
      "nwords": 1,
      "fields": [
        {
          "name": "div",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop1",
          "type": "cop",
          "startbit": 10,
          "stopbit": 6,
          "valueField": "00010"
        },
        {
          "name": "cop2",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011010"
        }
      ],
      "definition": "var cociente = ((rs >> 0) / (rt >> 0));\nif (cociente < 0) {\n    rd = Math.ceil(cociente);\n} else {\n    rd = Math.floor(cociente);\n}\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "div",
      "type": "Arithmetic integer",
      "co": "000000",
      "cop": "011010",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2",
      "signature": "div,$INT-Reg,$INT-Reg",
      "signatureRaw": "div $rs $rt",
      "fields": [
        {
          "name": "div",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011010"
        }
      ],
      "definition": "HI = (rs >> 0) % (rt >> 0);\nvar cociente = ((rs >> 0) / (rt >> 0));\nif (cociente < 0) {\n    LO = Math.ceil(cociente);\n} else {\n    LO = Math.floor(cociente);\n}\n"
    },
    {
      "name": "div.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "div.s,$SFP-Reg,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "div.s $fd $fs $ft",
      "co": "010001",
      "cop": "00000000011",
      "nwords": 1,
      "fields": [
        {
          "name": "div.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26,
          "valueField": "010001"
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000011"
        }
      ],
      "definition": "assert(ft!=0; 'Division by zero not allowed')\nfd = fs / ft"
    },
    {
      "name": "div.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "div.d,$DFP-Reg,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "div.d $fd $fs $ft",
      "co": "010001",
      "cop": "00001000011",
      "nwords": 1,
      "fields": [
        {
          "name": "div.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26,
          "valueField": "010001"
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000011"
        }
      ],
      "definition": "assert(ft!=0; 'Division by zero not allowed');\nfd = fs / ft"
    },
    {
      "name": "j",
      "type": "Unconditional bifurcation",
      "signature_definition": "F0 F1",
      "signature": "j,inm-signed",
      "signatureRaw": "j addr",
      "co": "000010",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "j",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": 25,
          "stopbit": 0
        }
      ],
      "definition": "PC=addr"
    },
    {
      "name": "jal",
      "type": "Function call",
      "signature_definition": "F0 F1",
      "signature": "jal,inm-signed",
      "signatureRaw": "jal addr",
      "co": "000011",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "jal",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": 25,
          "stopbit": 0
        }
      ],
      "definition": "ra=PC\nPC=addr"
    },
    {
      "name": "jalr",
      "type": "Function call",
      "signature_definition": "F0 $F2 $F1",
      "signature": "jalr,$INT-Reg,$INT-Reg",
      "signatureRaw": "jalr $rd $rs",
      "co": "000000",
      "cop": "001001",
      "nwords": 1,
      "fields": [
        {
          "name": "jalr",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "001001"
        }
      ],
      "definition": "rd=PC\nPC=rs\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "jr",
      "type": "Unconditional bifurcation",
      "signature_definition": "F0 $F1",
      "signature": "jr,$INT-Reg",
      "signatureRaw": "jr $rs",
      "co": "000000",
      "cop": "001000",
      "nwords": 1,
      "fields": [
        {
          "name": "jr",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "001000"
        }
      ],
      "definition": "PC=rs"
    },
    {
      "name": "lb",
      "type": "Memory access",
      "co": "100000",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F1 F2 ($F3)",
      "signature": "lb,$INT-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "lb $reg1 val ($reg2)",
      "fields": [
        {
          "name": "lb",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        }
      ],
      "definition": "reg1=((MP.b.[val+reg2] << 24) >> 24);\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "lbu",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "lbu,$INT-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "lbu $rt off ($base)",
      "co": "100100",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "lbu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "rt=(MP.b.[base+off] >>> 0);\ncheck_stack_limit(rt.name; sp.name; rt);"
    },
    {
      "name": "lh",
      "type": "Memory access",
      "co": "100001",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F1 F2 ($F3)",
      "signature": "lh,$INT-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "lh $reg1 val ($reg2)",
      "fields": [
        {
          "name": "lh",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        }
      ],
      "definition": "assert((val+reg2)%2==0; \"The memory must be aligned\")\nreg1=((MP.h.[val+reg2] << 16 ) >> 16);\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "lhu",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "lhu,$INT-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "lhu $rt off ($base)",
      "co": "100101",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "lhu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "rt=(MP.h.[base+off] >>> 0);\ncheck_stack_limit(rt.name; sp.name; rt);"
    },
    {
      "name": "lui",
      "type": "Other",
      "co": "001111",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 F2",
      "signature": "lui,$INT-Reg,inm-signed",
      "signatureRaw": "lui $reg1 val",
      "fields": [
        {
          "name": "lui",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg1=val<<16;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "lw",
      "type": "Memory access",
      "co": "100011",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 F2 ($F3)",
      "signature": "lw,$INT-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "lw $reg1 val ($reg2)",
      "fields": [
        {
          "name": "lw",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        }
      ],
      "definition": "assert((val+reg2)%4==0; 'The memory must be align')\nreg1=MP.w.[val+reg2];\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "lwc1",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "lwc1,$SFP-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "lwc1 $ft off ($base)",
      "co": "110001",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "lwc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "var buf = new ArrayBuffer(4);\n(new Uint32Array(buf))[0] = MP.w.[base+off];\nft = (new Float32Array(buf))[0];"
    },
    {
      "name": "mfc1",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F2 $F3",
      "signature": "mfc1,$INT-Reg,$SFP-Reg",
      "signatureRaw": "mfc1 $rt $fs",
      "co": "010001",
      "cop": "11111",
      "nwords": 1,
      "fields": [
        {
          "name": "mfc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "11111"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        }
      ],
      "definition": "var buf = new ArrayBuffer(4);\n(new Float32Array(buf))[0] = fs;\nrt = (new Uint32Array(buf))[0];\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "mfhi",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F1",
      "signature": "mfhi,$INT-Reg",
      "signatureRaw": "mfhi $rd",
      "co": "000000",
      "cop": "010000",
      "nwords": 1,
      "fields": [
        {
          "name": "mfhi",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010000"
        }
      ],
      "definition": "rd=HI;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "mflo",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F1",
      "signature": "mflo,$INT-Reg",
      "signatureRaw": "mflo $rd",
      "co": "000000",
      "cop": "010010",
      "nwords": 1,
      "fields": [
        {
          "name": "mflo",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010010"
        }
      ],
      "definition": "rd=LO;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "mod",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "mod,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "mod $rd $rs $rt",
      "co": "000000",
      "cop": "00011011010",
      "nwords": 1,
      "fields": [
        {
          "name": "mod",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 10,
          "stopbit": 0,
          "valueField": "00011011010"
        }
      ],
      "definition": "rd = (rs >> 0) % (rt >> 0);\ncheck_stack_limit(rd.name; sp.name; rd)"
    },
    {
      "name": "modu",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "modu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "modu $rd $rs $rt",
      "co": "000000",
      "cop": "00011011011",
      "nwords": 1,
      "fields": [
        {
          "name": "modu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 10,
          "stopbit": 0,
          "valueField": "00011011011"
        }
      ],
      "definition": "rd = (rs >>> 0) % (rt >>> 0);\ncheck_stack_limit(rd.name; sp.name; rd)"
    },
    {
      "name": "mov.s",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F3 $F2",
      "signature": "mov.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "mov.s $fd $fs",
      "co": "010001",
      "cop": "00000000110",
      "nwords": 1,
      "fields": [
        {
          "name": "mov.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000110"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "mov.d",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F3 $F2",
      "signature": "mov.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "mov.d $fd $fs",
      "co": "010001",
      "cop": "00001000110",
      "nwords": 1,
      "fields": [
        {
          "name": "mov.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000110"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "mtc1",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F2 $F3",
      "signature": "mtc1,$INT-Reg,$SFP-Reg",
      "signatureRaw": "mtc1 $rt $fs",
      "co": "010001",
      "cop": "00100",
      "nwords": 1,
      "fields": [
        {
          "name": "mtc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00100"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        }
      ],
      "definition": "var buf = new ArrayBuffer(4);\n(new Uint32Array(buf))[0] = rt;\nfs = (new Float32Array(buf))[0];"
    },
    {
      "name": "mthi",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F1",
      "signature": "mthi,$INT-Reg",
      "signatureRaw": "mthi $rs",
      "co": "000000",
      "cop": "010001",
      "nwords": 1,
      "fields": [
        {
          "name": "mthi",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010001"
        }
      ],
      "definition": "HI=rs"
    },
    {
      "name": "mtlo",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F1",
      "signature": "mtlo,$INT-Reg",
      "signatureRaw": "mtlo $rs",
      "co": "000000",
      "cop": "010011",
      "nwords": 1,
      "fields": [
        {
          "name": "mtlo",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010011"
        }
      ],
      "definition": "LO=rs"
    },
    {
      "name": "mul",
      "type": "Arithmetic integer",
      "co": "011100",
      "cop": "000010",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 $F3",
      "signature": "mul,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "mul $reg1 $reg2 $reg3",
      "fields": [
        {
          "name": "mul",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "reg1=reg2*reg3;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "mul.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "mul.s,$SFP-Reg,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "mul.s $fd $fs $ft",
      "co": "010001",
      "cop": "00000000010",
      "nwords": 1,
      "fields": [
        {
          "name": "mul.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "fd = fs * ft"
    },
    {
      "name": "mul.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "mul.d,$DFP-Reg,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "mul.d $fd $fs $ft",
      "co": "010001",
      "cop": "00001000010",
      "nwords": 1,
      "fields": [
        {
          "name": "mul.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "fd = fs * ft"
    },
    {
      "name": "mult",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1",
      "signature": "mult,$INT-Reg,$INT-Reg",
      "signatureRaw": "mult $rt $rs",
      "co": "000000",
      "cop": "011000",
      "nwords": 1,
      "fields": [
        {
          "name": "mult",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011000"
        }
      ],
      "definition": "var result = (rs >> 0) * (rt >> 0)\nHI=Math.floor(result / Math.pow (2, 32)) >>> 0\nLO=result % Math.pow(2, 32) >>> 0"
    },
    {
      "name": "multu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1",
      "signature": "multu,$INT-Reg,$INT-Reg",
      "signatureRaw": "multu $rt $rs",
      "co": "000000",
      "cop": "011001",
      "nwords": 1,
      "fields": [
        {
          "name": "multu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011001"
        }
      ],
      "definition": "var result = (rs >>> 0) * (rt >>> 0);\nHI = Math.floor(result / Math.pow(2, 32)) >>> 0;\nLO= result % Math.pow(2, 32) >>> 0;"
    },
    {
      "name": "nop",
      "type": "Logic",
      "co": "000000",
      "cop": "000000",
      "nwords": 1,
      "signature_definition": "F0",
      "signature": "nop",
      "signatureRaw": "nop",
      "fields": [
        {
          "name": "nop",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000000"
        }
      ],
      "definition": ""
    },
    {
      "name": "nor",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "nor,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "nor $rd $rs $rt",
      "co": "000000",
      "cop": "101111",
      "nwords": 1,
      "fields": [
        {
          "name": "nor",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "101111"
        }
      ],
      "definition": "rd = (~ (rs | rt));\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "or",
      "type": "Logic",
      "co": "000000",
      "cop": "100101",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 $F3",
      "signature": "or,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "or $reg1 $reg2 $reg3",
      "fields": [
        {
          "name": "or",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100101"
        }
      ],
      "definition": "reg1=reg2|reg3;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "ori",
      "type": "Logic",
      "co": "001101",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 F3",
      "signature": "ori,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "ori $reg1 $reg2 val",
      "fields": [
        {
          "name": "ori",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg1=reg2|val;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "rotr",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F2 F4",
      "signature": "rotr,$INT-Reg,$INT-Reg,inm-unsigned",
      "signatureRaw": "rotr $rd $rt sa",
      "co": "000000",
      "cop": "1000010",
      "nwords": 1,
      "fields": [
        {
          "name": "rotr",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "r",
          "type": "cop",
          "startbit": 21,
          "stopbit": 21,
          "valueField": "1"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "sa",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "rd = (((rt >>> sa) | (rt << (32 - sa))) >>> 0);\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "rsqrt.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "rsqrt.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "rsqrt.s $fd $fs",
      "co": "010001",
      "cop": "00000010110",
      "nwords": 1,
      "fields": [
        {
          "name": "rsqrt.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010110"
        }
      ],
      "definition": "fd = 1.0/Math.sqrt(fs)"
    },
    {
      "name": "rsqrt.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "rsqrt.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "rsqrt.d $fd $fs",
      "co": "010001",
      "cop": "00001010110",
      "nwords": 1,
      "fields": [
        {
          "name": "rsqrt.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010110"
        }
      ],
      "definition": "fd = 1.0/Math.sqrt(fs)"
    },
    {
      "name": "sb",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "sb,$INT-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "sb $rt off ($base)",
      "co": "101000",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "sb",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "MP.b.[off+base]=rt"
    },
    {
      "name": "sh",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "sh,$INT-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "sh $rt off ($base)",
      "co": "101001",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "sh",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "assert((off+base)%2==0; 'The memory must be align')\nMP.h.[off+base]=rt;"
    },
    {
      "name": "sll",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "sll,$INT-Reg,$INT-Reg,inm-unsigned",
      "signatureRaw": "sll $rd $rt sa",
      "co": "000000",
      "cop": "111111",
      "nwords": 1,
      "fields": [
        {
          "name": "sll",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "sa",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "111111"
        }
      ],
      "definition": "rd = (rt << sa) >>> 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "slt",
      "type": "Logic",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "slt,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "slt $rd $rs $rt",
      "co": "000000",
      "cop": "101010",
      "nwords": 1,
      "fields": [
        {
          "name": "slt",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "101010"
        }
      ],
      "definition": "rd = (rs >> 0) < (rt >> 0) ? 1 : 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "sltu",
      "type": "Logic",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "sltu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "sltu $rd $rs $rt",
      "co": "000000",
      "cop": "101011",
      "nwords": 1,
      "fields": [
        {
          "name": "sltu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "101011"
        }
      ],
      "definition": "rd = (rs >> 0) < (rt >> 0) ? 1 : 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "slti",
      "type": "Logic",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "slti,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "slti $rs $rt inm",
      "co": "001010",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "slti",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "rs = (rt >> 0) < (inm >> 0) ? 1 : 0;\ncheck_stack_limit(rt.name; sp.name; rt);"
    },
    {
      "name": "sltiu",
      "type": "Logic",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "sltiu,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "sltiu $rs $rt inm",
      "co": "001011",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "sltiu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "rs = (rt >>> 0) < (inm >>> 0) ? 1 : 0;\ncheck_stack_limit(rt.name; sp.name; rt);"
    },
    {
      "name": "sqrt.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "sqrt.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "sqrt.s $fd $fs",
      "co": "010001",
      "cop": "00000000100",
      "nwords": 1,
      "fields": [
        {
          "name": "sqrt.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000100"
        }
      ],
      "definition": "fd = Math.sqrt(fs)"
    },
    {
      "name": "sqrt.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "sqrt.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "sqrt.d $fd $fs",
      "co": "010001",
      "cop": "00001000100",
      "nwords": 1,
      "fields": [
        {
          "name": "sqrt.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000100"
        }
      ],
      "definition": "fd = Math.sqrt(fs)"
    },
    {
      "name": "sra",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "sra,$INT-Reg,$INT-Reg,inm-unsigned",
      "signatureRaw": "sra $rd $rt sa",
      "co": "000000",
      "cop": "000011",
      "nwords": 1,
      "fields": [
        {
          "name": "sra",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "sa",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000011"
        }
      ],
      "definition": "rd = (rt >> sa) >>> 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "srl",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F2 F4",
      "signature": "srl,$INT-Reg,$INT-Reg,inm-unsigned",
      "signatureRaw": "srl $rd $rt sa",
      "co": "000000",
      "cop": "0000010",
      "nwords": 1,
      "fields": [
        {
          "name": "srl",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "r",
          "type": "cop",
          "startbit": 21,
          "stopbit": 21,
          "valueField": "0"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "sa",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "rd = rt >>> sa;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "sub",
      "type": "Arithmetic integer",
      "co": "000000",
      "cop": "100010",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 $F3",
      "signature": "sub,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "sub $reg1 $reg2 $reg3",
      "fields": [
        {
          "name": "sub",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100010"
        }
      ],
      "definition": "reg1=((reg2 >> 0) - (reg3 >> 0)) >>> 0;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "sub.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "sub.s,$SFP-Reg,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "sub.s $fd $fs $ft",
      "co": "010001",
      "cop": "00000000001",
      "nwords": 1,
      "fields": [
        {
          "name": "sub.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000001"
        }
      ],
      "definition": "fd = fs - ft"
    },
    {
      "name": "sub.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "sub.d,$DFP-Reg,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "sub.d $fd $fs $ft",
      "co": "010001",
      "cop": "00001000001",
      "nwords": 1,
      "fields": [
        {
          "name": "sub.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000001"
        }
      ],
      "definition": "fd = fs - ft"
    },
    {
      "name": "subu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "subu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "subu $rd $rs $rt",
      "co": "000000",
      "cop": "100011",
      "nwords": 1,
      "fields": [
        {
          "name": "subu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100011"
        }
      ],
      "definition": "rd = ((rs >>> 0) - (rt >>> 0)) >>> 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "sw",
      "type": "Memory access",
      "co": "101011",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F1 F2 ($F3)",
      "signature": "sw,$INT-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "sw $reg1 val ($reg2)",
      "fields": [
        {
          "name": "sw",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        }
      ],
      "definition": "assert((val+reg2)%4==0; 'The memory must be align')\nMP.w.[val+reg2]=reg1"
    },
    {
      "name": "swc1",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "swc1,$SFP-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "swc1 $ft off ($base)",
      "co": "111001",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "swc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "var buf = new ArrayBuffer(4);\n(new Float32Array(buf))[0] = ft;\nMP.w.[base+off] = (new Uint32Array(buf))[0];"
    },
    {
      "name": "sdc1",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "sdc1,$DFP-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "sdc1 $ft off ($base)",
      "co": "111101",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "sdc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "MP.w.[base+off] = splitDouble(ft; 1); MP.w.[base+off+4] = splitDouble(ft; 0);"
    },
    {
      "name": "xor",
      "type": "Logic",
      "co": "000000",
      "cop": "100110",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 $F3",
      "signature": "xor,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "xor $reg1 $reg2 $reg3",
      "fields": [
        {
          "name": "xor",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100110"
        }
      ],
      "definition": "reg1=reg2^reg3;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "xori",
      "type": "Logic",
      "co": "001110",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 F3",
      "signature": "xori,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "xori $reg1 $reg2 val",
      "fields": [
        {
          "name": "xori",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg1=reg2^val;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "syscall",
      "type": "Syscall",
      "co": "000000",
      "cop": "001100",
      "nwords": 1,
      "signature_definition": "F0",
      "signature": "syscall",
      "signatureRaw": "syscall",
      "fields": [
        {
          "name": "syscall",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "001100"
        }
      ],
      "definition": "switch(v0){\ncase 1:\nprint_int(a0);\nbreak;\ncase 2:\n\nprint_float(f12);\nbreak;\ncase 3:\nprint_double(FP12);\nbreak;\ncase 4:\nprint_string(a0);\nbreak;\ncase 5:\nread_int(v0);\nbreak;\ncase 6:\nread_float(f0);\nbreak;\ncase 7:\nread_double(FP0);\nbreak;\ncase 8:\nread_string(a0, a1);\nbreak;\ncase 9:\nsbrk(a0, v0);\nbreak;\ncase 10:\nexit();\nbreak;\ncase 11:\nprint_char(a0);\nbreak;\ncase 12:\nread_char(v0);\nbreak;\n}"
    },
    {
      "name": "divu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "divu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "divu $rd $rs $rt",
      "co": "000000",
      "cop": "00010011011",
      "nwords": 1,
      "fields": [
        {
          "name": "divu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 10,
          "stopbit": 6,
          "valueField": "00010"
        },
        {
          "name": "sop33",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011011"
        }
      ],
      "definition": "assert(rt!=0; 'Division by zero not allowed')\nrd = Math.floor((rs >>> 0) / (rt >>> 0));\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "divu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F1 $F2",
      "signature": "divu,$INT-Reg,$INT-Reg",
      "signatureRaw": "divu $rs $rt",
      "co": "000000",
      "cop": "011011",
      "nwords": 1,
      "fields": [
        {
          "name": "divu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011011"
        }
      ],
      "definition": "assert(rt!=0; 'Division by zero not allowed')\nLO = Math.floor((rs >>> 0) / (rt >>> 0));\nHI = (rs >>> 0) % (rt >>> 0);"
    },
    {
      "name": "ldc1",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "ldc1,$DFP-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "ldc1 $ft off ($base)",
      "co": "110101",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "ldc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "assert((base+off)%8==0; \"The memory must be aligned\");\nvar buf = new ArrayBuffer(8);\nvar arr = (new Uint32Array(buf));\narr[0] =  MP.w.[off+base];\narr[1] =  MP.w.[off+4+base]\n;ft = (new Float64Array(buf))[0];"
   },
  {
    "name": "bc1f",
    "type": "Conditional bifurcation",
    "signature_definition": "F0 F2 F3",
    "signature": "bc1f,inm-unsigned,offset_words",
    "signatureRaw": "bc1f cc off",
    "co": "010001",
    "cop": "0100000",
    "nwords": 1,
    "fields": [
      {
        "name": "bc1f",
        "type": "co",
        "startbit": 31,
        "stopbit": 26
      },
      {
        "name": "cop",
        "type": "cop",
        "startbit": 25,
        "stopbit": 21,
        "valueField": "01000"
      },
      {
        "name": "cc",
        "type": "inm-unsigned",
        "startbit": 20,
        "stopbit": 18
      },
      {
        "name": "off",
        "type": "offset_words",
        "startbit": 15,
        "stopbit": 0
      },
      {
        "name": "cop",
        "type": "cop",
        "startbit": 17,
        "stopbit": 16,
        "valueField": "00"
      }
    ],
    "definition": "if ((FCSR & (1 << ((cc == 0 ? 0 : cc+1) + 23))) == 0) {\n    PC=PC+((off << 16) >> 14)\n}"
  },
  {
    "name": "bc1t",
    "type": "Conditional bifurcation",
    "signature_definition": "F0 F2 F4",
    "signature": "bc1t,inm-unsigned,offset_words",
    "signatureRaw": "bc1t cc off",
    "co": "010001",
    "cop": "0100001",
    "nwords": 1,
    "fields": [
      {
        "name": "bc1t",
        "type": "co",
        "startbit": 31,
        "stopbit": 26
      },
      {
        "name": "cop",
        "type": "cop",
        "startbit": 25,
        "stopbit": 21,
        "valueField": "01000"
      },
      {
        "name": "cc",
        "type": "inm-unsigned",
        "startbit": 20,
        "stopbit": 18
      },
      {
        "name": "ndtf",
        "type": "cop",
        "startbit": 17,
        "stopbit": 16,
        "valueField": "01"
      },
      {
        "name": "off",
        "type": "offset_words",
        "startbit": 15,
        "stopbit": 0
      }
    ],
    "definition": "if ((FCSR & (1 << ((cc == 0 ? 0 : cc+1) + 23))) != 0) {\n    PC=PC+((off << 16) >> 14)\n}"
  },
  {
			"name": "c.eq.s",
			"type": "Logic",
			"signature_definition": "F0 F4 $F3 $F2",
			"signature": "c.eq.s,inm-unsigned,$SFP-Reg,$SFP-Reg",
			"signatureRaw": "c.eq.s cc $fs $ft",
			"co": "010001",
			"cop": "000000010",
			"nwords": 1,
			"fields": [
        {
          "name": "c.eq.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0010"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (ft == fs) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off))); FCCR = condition"
    },
    {
			"name": "c.eq.d",
			"type": "Logic",
			"signature_definition": "F0 F4 $F3 $F2",
			"signature": "c.eq.d,inm-unsigned,$DFP-Reg,$DFP-Reg",
			"signatureRaw": "c.eq.d cc $fs $ft",
			"co": "010001",
			"cop": "000010010",
			"nwords": 1,
			"fields": [
        {
          "name": "c.eq.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0010"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (ft == fs) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off))); FCCR = condition"
    },
    {
      "name": "c.olt.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.olt.s,inm-unsigned,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.olt.s cc $fs $ft",
      "co": "010001",
      "cop": "000000100",
      "nwords": 1,
      "fields": [
        {
          "name": "c.olt.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0100"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (fs < ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off))); FCCR = condition"
    },
    {
      "name": "c.olt.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.olt.d,inm-unsigned,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.olt.d cc $fs $ft",
      "co": "010001",
      "cop": "000010100",
      "nwords": 1,
      "fields": [
        {
          "name": "c.olt.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0100"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (fs < ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off))); FCCR = condition"
    },
    {
      "name": "c.ole.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ole.s,inm-unsigned,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.ole.s cc $fs $ft",
      "co": "010001",
      "cop": "000000110",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ole.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0110"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (fs <= ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off))); FCCR = condition"
    },
    {
      "name": "c.ole.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ole.d,inm-unsigned,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.ole.d cc $fs $ft",
      "co": "010001",
      "cop": "000010110",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ole.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm-unsigned",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0110"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (fs <= ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off))); FCCR = condition"
    }
  ],
  "pseudoinstructions": [
    {
      "name": "move",
      "nwords": 1,
      "signature_definition": "move $F0 $F1",
      "signature": "move,$INT-Reg,$INT-Reg",
      "signatureRaw": "move $reg1 $reg2",
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "add $reg1 $zero $reg2;"
    },
    {
      "name": "b",
      "signature_definition": "b F0",
      "signature": "b,inm-unsigned",
      "signatureRaw": "b inm",
      "nwords": 1,
      "fields": [
        {
          "name": "inm",
          "type": "inm-unsigned",
          "startbit": "25",
          "stopbit": "0"
        }
      ],
      "definition": "bgez $zero inm;"
    },
    {
      "name": "addi",
      "nwords": 1,
      "signature_definition": "addi $F0 $F1 F2",
      "signature": "addi,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "addi $reg1 $reg2 val",
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nadd $reg1 $reg2 $at;"
    },
    {
      "name": "addiu",
      "nwords": 1,
      "signature_definition": "addiu $F0 $F1 F2",
      "signature": "addiu,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "addiu $reg1 $reg2 val",
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\naddu $reg1 $reg2 $at;"
    },
    {
      "name": "jalr",
      "signature_definition": "jalr $F0",
      "signature": "jalr,$INT-Reg",
      "signatureRaw": "jalr $rs",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "16"
        }
      ],
      "definition": "jalr $rs $ra;"
    },
    {
      "name": "li",
      "signature_definition": "li $F0 F1",
      "signature": "li,$INT-Reg,inm-signed",
      "signatureRaw": "li $rd val",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "val",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){addi $rd $zero val;}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nadd $rd $zero $at;}"
    },
    {
      "name": "la",
      "signature_definition": "la $F0 F1",
      "signature": "la,$INT-Reg,inm-signed",
      "signatureRaw": "la $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "20",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){addi $rd $zero addr;}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nadd $rd $rd $at;}"
    },

    {
      "name": "lw",
      "signature_definition": "lw $F0 ($F1)",
      "signature": "lw,$INT-Reg,($INT-Reg)",
      "signatureRaw": "lw $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "lw $reg1 0 ($reg2);"
    },
    {
      "name": "lw",
      "signature_definition": "lw $F0 F1",
      "signature": "lw,$INT-Reg,inm-signed",
      "signatureRaw": "lw $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){lw $rd addr ($zero);}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nlw $rd 0 ($at);}"
    },
    {
      "name": "lh",
      "signature_definition": "lh $F0 ($F1)",
      "signature": "lh,$INT-Reg,($INT-Reg)",
      "signatureRaw": "lh $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "lh $reg1 0 ($reg2);"
    },
    {
      "name": "lh",
      "signature_definition": "lh $F0 F1",
      "signature": "lh,$INT-Reg,inm-signed",
      "signatureRaw": "lh $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){lh $rd addr ($zero);}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nlh $rd 0 ($at);}"
    },
    {
      "name": "lhu",
      "signature_definition": "lhu $F0 ($F1)",
      "signature": "lhu,$INT-Reg,($INT-Reg)",
      "signatureRaw": "lhu $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "lhu $reg1 0 ($reg2);"
    },
    {
      "name": "lhu",
      "signature_definition": "lhu $F0 F1",
      "signature": "lhu,$INT-Reg,inm-signed",
      "signatureRaw": "lhu $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){lhu $rd addr ($zero);}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nlhu $rd 0 ($at);}"
    },
    {
      "name": "lb",
      "signature_definition": "lb $F0 ($F1)",
      "signature": "lb,$INT-Reg,($INT-Reg)",
      "signatureRaw": "lb $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "lb $reg1 0 ($reg2);"
    },
    {
      "name": "lb",
      "signature_definition": "lb $F0 F1",
      "signature": "lb,$INT-Reg,inm-signed",
      "signatureRaw": "lb $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){lb $rd addr ($zero);}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nlb $rd 0 ($at);}"
    },
    {
      "name": "lbu",
      "signature_definition": "lbu $F0 ($F1)",
      "signature": "lbu,$INT-Reg,($INT-Reg)",
      "signatureRaw": "lbu $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "lbu $reg1 0 ($reg2);"
    },
    {
      "name": "lbu",
      "signature_definition": "lbu $F0 F1",
      "signature": "lbu,$INT-Reg,inm-signed",
      "signatureRaw": "lbu $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){lbu $rd addr ($zero);}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nlbu $rd 0 ($at);}"
    },

    {
      "name": "l.d",
      "signature_definition": "l.d $F0 ($F1)",
      "signature": "l.d,$DFP-Reg,($INT-Reg)",
      "signatureRaw": "l.d $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "DFP-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "ldc1 $reg1 0 ($reg2);"
    },
    {
      "name": "l.d",
      "signature_definition": "l.d $F0 F1 ($F2)",
      "signature": "l.d,$DFP-Reg,inm-signed,($INT-Reg)",
      "signatureRaw": "l.d $reg1 inm ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "DFP-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "ldc1 $reg1 inm ($reg2);"
    },
    {
      "name": "sw",
      "signature_definition": "sw $F0 ($F1)",
      "signature": "sw,$INT-Reg,($INT-Reg)",
      "signatureRaw": "sw $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "sw $reg1 0 ($reg2);"
    },
    {
      "name": "sw",
      "signature_definition": "sw $F0 F1",
      "signature": "sw,$INT-Reg,inm-signed",
      "signatureRaw": "sw $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){sw $rd addr ($zero);}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nsw $rd 0 ($at);}"
    },
    {
      "name": "sh",
      "signature_definition": "sh $F0 ($F1)",
      "signature": "sh,$INT-Reg,($INT-Reg)",
      "signatureRaw": "sh $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "sh $reg1 0 ($reg2);"
    },
    {
      "name": "sh",
      "signature_definition": "sh $F0 F1",
      "signature": "sh,$INT-Reg,inm-signed",
      "signatureRaw": "sh $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){sh $rd addr ($zero);}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nsh $rd 0 ($at);}"
    },
    {
      "name": "sb",
      "signature_definition": "sb $F0 ($F1)",
      "signature": "sb,$INT-Reg,($INT-Reg)",
      "signatureRaw": "sb $reg1 ($reg2)",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "sb $reg1 0 ($reg2);"
    },
    {
      "name": "sb",
      "signature_definition": "sb $F0 F1",
      "signature": "sb,$INT-Reg,inm-signed",
      "signatureRaw": "sb $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){sb $rd addr ($zero);}\nelse{lui $at Field.2.(31,16).int;\nori $at $at Field.2.(15,0).int;\nsb $rd 0 ($at);}"
    },
    {
      "name": "add",
      "signature_definition": "add $F0 $F1 F2",
      "signature": "add,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "add $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){addi $rs $rt inm;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nadd $rs $rt $at;} "
    },
    {
      "name": "addu",
      "signature_definition": "addu $F0 $F1 F2",
      "signature": "addu,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "addu $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){addiu $rs $rt inm;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\naddu $rs $rt $at;} "
    },
    {
      "name": "and",
      "signature_definition": "and $F0 $F1 F2",
      "signature": "and,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "and $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){andi $rs $rt inm;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nand $rs $rt $at;} "
    },
    {
      "name": "andi",
      "signature_definition": "andi $F0 $F1 F2",
      "signature": "andi,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "andi $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nand $rs $rt $at;"
    },
    {
      "name": "ori",
      "signature_definition": "ori $F0 $F1 F2",
      "signature": "ori,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "ori $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nor $rs $rt $at;"
    },
    {
      "name": "mul",
      "signature_definition": "mul $F0 $F1 F2",
      "signature": "mul,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "mul $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){addi $at $zero inm; mul $rs $rt $at;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nmul $rs $rt $at;} "
    },
    {
      "name": "nor",
      "signature_definition": "nor $F0 $F1 F2",
      "signature": "nor,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "nor $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){addi $at $zero inm; nor $rs $rt $at;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nnor $rs $rt $at;} "
    },
    {
      "name": "or",
      "signature_definition": "or $F0 $F1 F2",
      "signature": "or,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "or $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){ori $rs $rt inm;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nor $rs $rt $at;} "
    },
    {
      "name": "xori",
      "signature_definition": "xori $F0 $F1 F2",
      "signature": "xori,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "xori $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nxor $rs $rt $at;"
    },
    {
      "name": "sub",
      "signature_definition": "sub $F0 $F1 F2",
      "signature": "sub,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "sub $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){addi $at $zero inm; sub $rs $rt $at;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nsub $rs $rt $at;} "
    },
    {
      "name": "subu",
      "signature_definition": "subu $F0 $F1 F2",
      "signature": "subu,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "subu $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){addi $at $zero inm; subu $rs $rt $at;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nsubu $rs $rt $at;} "
    },
    {
      "name": "rem",
      "signature_definition": "rem $F0 $F1 $F2",
      "signature": "rem,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "rem $reg1 $reg2 $reg3",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": "15",
          "stopbit": "10"
        }
      ],
      "definition": "div $reg2 $reg3; mfhi $reg1;"
    },
    {
      "name": "xor",
      "signature_definition": "xor $F0 $F1 F2",
      "signature": "xor,$INT-Reg,$INT-Reg,inm-signed",
      "signatureRaw": "xor $rs $rt inm",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "inm",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.3.SIZE<=16){xori $rs $rt inm;}\nelse{lui $at Field.3.(31,16).int;\nori $at $at Field.3.(15,0).int;\nxor $rs $rt $at;} "
    },
    {
      "name": "l.s",
      "signature_definition": "l.s $F0 ($F1)",
      "signature": "l.s,$SFP-Reg,$INT-Reg",
      "signatureRaw": "l.s $rs ($rt)",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "SFP-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        }
      ],
      "definition": "lwc1 $rs 0 ($rt);"
    },
    {
      "name": "l.s",
      "signature_definition": "l.s $F0 F2 ($F1)",
      "signature": "l.s,$SFP-Reg,inm-signed,$INT-Reg",
      "signatureRaw": "l.s $rs off ($rt)",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "SFP-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "lwc1 $rs off ($rt);"
    },
    {
      "name": "s.s",
      "signature_definition": "s.s $F0 ($F1)",
      "signature": "s.s,$SFP-Reg,$INT-Reg",
      "signatureRaw": "s.s $rs ($rt)",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "SFP-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        }
      ],
      "definition": "swc1 $rs 0 ($rt);"
    },
    {
      "name": "s.s",
      "signature_definition": "s.s $F0 F2 ($F1)",
      "signature": "s.s,$SFP-Reg,inm-signed,$INT-Reg",
      "signatureRaw": "s.s $rs off ($rt)",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "SFP-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "swc1 $rs off ($rt);"
    },
    {
      "name": "s.d",
      "signature_definition": "s.d $F0 ($F1)",
      "signature": "s.d,$DFP-Reg,$INT-Reg",
      "signatureRaw": "s.d $rs ($rt)",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "DFP-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        }
      ],
      "definition": "sdc1 $rs 0 ($rt);"
    },
    {
      "name": "s.d",
      "signature_definition": "s.d $F0 F2 ($F1)",
      "signature": "s.d,$DFP-Reg,inm-signed,$INT-Reg",
      "signatureRaw": "s.d $rs off ($rt)",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "DFP-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": "20",
          "stopbit": "16"
        },
        {
          "name": "off",
          "type": "inm-signed",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "sdc1 $rs off ($rt);"
    },
    {
      "name": "beq",
      "signature_definition": "beq $F0 F1 F2",
      "signature": "beq,$INT-Reg,inm-unsigned,offset_words",
      "signatureRaw": "beq $reg1 inm off",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "inm",
          "type": "inm-unsigned",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "ori $at $zero inm; beq $reg1 $at off;"
    },
  	{
      "name": "bge",
      "signature_definition": "bge $F0 $F1 F2",
      "signature": "bge,$INT-Reg,$INT-Reg,offset_words",
      "signatureRaw": "bge $reg1 $reg2 off",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "slt $at $reg1 $reg2; beq $at $zero off;"
    },
    {
      "name": "bge",
      "signature_definition": "bge $F0 F1 F2",
      "signature": "bge,$INT-Reg,inm-unsigned,offset_words",
      "signatureRaw": "bge $reg1 inm off",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "inm",
          "type": "inm-unsigned",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "slti $at $reg1 inm; beq $at $zero off;"
    },

    {
      "name": "bgt",
      "signature_definition": "bgt $F0 $F1 F2",
      "signature": "bgt,$INT-Reg,$INT-Reg,offset_words",
      "signatureRaw": "bgt $reg1 $reg2 off",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "slt $at $reg2 $reg1; bne $at $zero off;"
    },
    {
      "name": "bgt",
      "signature_definition": "bgt $F0 F1 F2",
      "signature": "bgt,$INT-Reg,inm-unsigned,offset_words",
      "signatureRaw": "bgt $reg1 inm off",
      "nwords": 1,
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "inm",
          "type": "inm-unsigned",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "offset_words",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "addi $at $zero inm; addi $at $at 1; slt $at $reg1 $at; beq $at $zero off;"
    },
  	{
        "name": "ble",
        "signature_definition": "ble $F0 $F1 F2",
        "signature": "ble,$INT-Reg,$INT-Reg,offset_words",
        "signatureRaw": "ble $reg1 $reg2 off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "reg2",
            "type": "INT-Reg",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "slt $at $reg2 $reg1; beq $at $zero off;"
      },

      {
        "name": "ble",
        "signature_definition": "ble $F0 F1 F2",
        "signature": "ble,$INT-Reg,inm-unsigned,offset_words",
        "signatureRaw": "ble $reg1 inm off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "inm",
            "type": "inm-unsigned",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "addi $at $zero inm; addi $at $at 1; slti $at $reg1 inm; bne $at $zero off;"
      },
      


      {
        "name": "blt",
        "signature_definition": "blt $F0 $F1 F2",
        "signature": "blt,$INT-Reg,$INT-Reg,offset_words",
        "signatureRaw": "blt $reg1 $reg2 off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "reg2",
            "type": "INT-Reg",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "slt $at $reg1 $reg2; bne $at $zero off;"
      },
      {
        "name": "blt",
        "signature_definition": "blt $F0 F1 F2",
        "signature": "blt,$INT-Reg,inm-unsigned,offset_words",
        "signatureRaw": "blt $reg1 inm off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "inm",
            "type": "inm-unsigned",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "slti $at $reg1 inm; bne $at $zero off;"
      },
      
      {
        "name": "bne",
        "signature_definition": "bne $F0 F1 F2",
        "signature": "bne,$INT-Reg,inm-unsigned,offset_words",
        "signatureRaw": "bne $reg1 inm off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "inm",
            "type": "inm-unsigned",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "ori $at $zero inm; bne $reg1 $at off;"
      },


      {
        "name": "bgtu",
        "signature_definition": "bgtu $F0 $F1 F2",
        "signature": "bgtu,$INT-Reg,$INT-Reg,offset_words",
        "signatureRaw": "bgtu $reg1 $reg2 off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "reg2",
            "type": "INT-Reg",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "sltu $at $reg2 $reg1; bne $at $zero off;"
      },
      {
        "name": "bgtu",
        "signature_definition": "bgtu $F0 F1 F2",
        "signature": "bgtu,$INT-Reg,inm-unsigned,offset_words",
        "signatureRaw": "bgtu $reg1 inm off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "inm",
            "type": "inm-unsigned",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "ori $at $zero inm; beq $at $reg1 off; sltu $at $reg1 $at;"
      },


      {
        "name": "bgeu",
        "signature_definition": "bgeu $F0 $F1 F2",
        "signature": "bgeu,$INT-Reg,$INT-Reg,offset_words",
        "signatureRaw": "bgeu $reg1 $reg2 off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "reg2",
            "type": "INT-Reg",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "sltu $at $reg1 $reg2; beq $at $zero off;"
      },
      {
        "name": "bgeu",
        "signature_definition": "bgeu $F0 F1 F2",
        "signature": "bgeu,$INT-Reg,inm-unsigned,offset_words",
        "signatureRaw": "bgeu $reg1 inm off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "inm",
            "type": "inm-unsigned",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "sltiu $at $reg1 inm; beq $at $zero off;"
      },


      {
        "name": "bleu",
        "signature_definition": "bleu $F0 $F1 F2",
        "signature": "bleu,$INT-Reg,$INT-Reg,offset_words",
        "signatureRaw": "bleu $reg1 $reg2 off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "reg2",
            "type": "INT-Reg",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "sltu $at $reg2 $reg1; beq $at $zero off;"
      },
      {
        "name": "bleu",
        "signature_definition": "bleu $F0 F1 F2",
        "signature": "bleu,$INT-Reg,inm-unsigned,offset_words",
        "signatureRaw": "bleu $reg1 inm off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "inm",
            "type": "inm-unsigned",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "ori $at $zero inm; beq $at $reg1 off; sltu $at $reg1 $at; bne $at $zero off;"
      },


      {
        "name": "bltu",
        "signature_definition": "bltu $F0 $F1 F2",
        "signature": "bltu,$INT-Reg,$INT-Reg,offset_words",
        "signatureRaw": "bltu $reg1 $reg2 off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "reg2",
            "type": "INT-Reg",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "sltu $at $reg1 $reg2; bne $at $zero off;"
      },
      {
        "name": "bltu",
        "signature_definition": "bltu $F0 F1 F2",
        "signature": "bltu,$INT-Reg,inm-unsigned,offset_words",
        "signatureRaw": "bltu $reg1 inm off",
        "nwords": 1,
        "fields": [
          {
            "name": "reg1",
            "type": "INT-Reg",
            "startbit": 25,
            "stopbit": 21
          },
          {
            "name": "inm",
            "type": "inm-unsigned",
            "startbit": 20,
            "stopbit": 16
          },
          {
            "name": "off",
            "type": "offset_words",
            "startbit": 15,
            "stopbit": 0
          }
        ],
        "definition": "sltiu $at $reg1 off; bne $at $zero off;"
      },


      {
        "name": "li.s",
        "signature_definition": "li.s $F0 F1",
        "signature": "li.s,$SFP-Reg,inm-signed",
        "signatureRaw": "li.s $rd val",
        "nwords": 1,
        "fields": [
          {
            "name": "rd",
            "type": "SFP-Reg",
            "startbit": "25",
            "stopbit": "21"
          },
          {
            "name": "val",
            "type": "inm-signed",
            "startbit": "15",
            "stopbit": "0"
          }
        ],
        "definition": "lui $at Field.2.(31,16).float;\nori $at $at Field.2.(15,0).float;\nmtc1 $at $rd;"
      },
      {
        "name": "li.d",
        "signature_definition": "li.d $F0 F1",
        "signature": "li.d,$DFP-Reg,inm-signed",
        "signatureRaw": "li.d $rd val",
        "nwords": 1,
        "fields": [
          {
            "name": "rd",
            "type": "DFP-Reg",
            "startbit": "25",
            "stopbit": "21"
          },
          {
            "name": "val",
            "type": "inm-signed",
            "startbit": "15",
            "stopbit": "0"
          }
        ],
        "definition": "lui $at Field.2.(31,16).double;\nori $at $at Field.2.(15,0).double;\nmtc1 $at $aliasDouble(rd;1);\nlui $at Field.2.(63,48).double;\nori $at $at Field.2.(47,32).double;\nmtc1 $at $aliasDouble(rd;0);"
      },


      {
	      "name": "c.eq.s",
	      "signature_definition": "c.eq.s $F1 $F0",
	      "signature": "c.eq.s,$SFP-Reg,$SFP-Reg",
	      "signatureRaw": "c.eq.s $fs $ft",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "ft",
	          "type": "SFP-Reg",
	          "startbit": "25",
	          "stopbit": "21"
	        },
	        {
	          "name": "fs",
	          "type": "SFP-Reg",
	          "startbit": "20",
	          "stopbit": "16"
	        }
	      ],
	      "definition": "c.eq.s 0 $fs $ft;"
	    },
	    {
	      "name": "c.eq.d",
	      "signature_definition": "c.eq.d $F1 $F0",
	      "signature": "c.eq.d,$DFP-Reg,$DFP-Reg",
	      "signatureRaw": "c.eq.d $fs $ft",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "ft",
	          "type": "DFP-Reg",
	          "startbit": "25",
	          "stopbit": "21"
	        },
	        {
	          "name": "fs",
	          "type": "DFP-Reg",
	          "startbit": "20",
	          "stopbit": "16"
	        }
	      ],
	      "definition": "c.eq.d 0 $fs $ft;"
	    },
	    {
	      "name": "c.olt.s",
	      "signature_definition": "c.olt.s $F1 $F0",
	      "signature": "c.olt.s,$SFP-Reg,$SFP-Reg",
	      "signatureRaw": "c.olt.s $fs $ft",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "ft",
	          "type": "SFP-Reg",
	          "startbit": "25",
	          "stopbit": "21"
	        },
	        {
	          "name": "fs",
	          "type": "SFP-Reg",
	          "startbit": "20",
	          "stopbit": "16"
	        }
	      ],
	      "definition": "c.olt.s 0 $fs $ft;"
	    },
	    {
	      "name": "c.olt.d",
	      "signature_definition": "c.olt.d $F1 $F0",
	      "signature": "c.olt.d,$DFP-Reg,$DFP-Reg",
	      "signatureRaw": "c.olt.d $fs $ft",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "ft",
	          "type": "DFP-Reg",
	          "startbit": "25",
	          "stopbit": "21"
	        },
	        {
	          "name": "fs",
	          "type": "DFP-Reg",
	          "startbit": "20",
	          "stopbit": "16"
	        }
	      ],
	      "definition": "c.olt.d 0 $fs $ft;"
	    },
	    {
	      "name": "c.ole.s",
	      "signature_definition": "c.ole.s $F1 $F0",
	      "signature": "c.ole.s,$SFP-Reg,$SFP-Reg",
	      "signatureRaw": "c.ole.s $fs $ft",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "ft",
	          "type": "SFP-Reg",
	          "startbit": "25",
	          "stopbit": "21"
	        },
	        {
	          "name": "fs",
	          "type": "SFP-Reg",
	          "startbit": "20",
	          "stopbit": "16"
	        }
	      ],
	      "definition": "c.ole.s 0 $fs $ft;"
	    },
	    {
	      "name": "c.ole.d",
	      "signature_definition": "c.ole.d $F1 $F0",
	      "signature": "c.ole.d,$DFP-Reg,$DFP-Reg",
	      "signatureRaw": "c.ole.d $fs $ft",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "ft",
	          "type": "DFP-Reg",
	          "startbit": "25",
	          "stopbit": "21"
	        },
	        {
	          "name": "fs",
	          "type": "DFP-Reg",
	          "startbit": "20",
	          "stopbit": "16"
	        }
	      ],
	      "definition": "c.ole.d 0 $fs $ft;"
	    },
	    {
	      "name": "bc1t",
	      "signature_definition": "bc1t F0",
	      "signature": "bc1t, offset_words",
	      "signatureRaw": "bc1t off",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "off",
	          "type": "offset_words",
	          "startbit": "25",
	          "stopbit": "0"
	        }
	      ],
	      "definition": "bc1t 0 off;"
	    },
	    {
	      "name": "ror",
	      "signature_definition": "ror $F1 $F0 F2",
	      "signature": "ror,$INT-Reg,$INT-Reg,inm-unsigned",
	      "signatureRaw": "ror $reg1 $reg2 val",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "reg2",
	          "type": "INT-Reg",
	          "startbit": "25",
	          "stopbit": "21"
	        },
	        {
	          "name": "reg1",
	          "type": "INT-Reg",
	          "startbit": "20",
	          "stopbit": "16"
	        },
	        {
	          "name": "val",
	          "type": "inm-unsigned",
	          "startbit": "15",
	          "stopbit": "0"
	        }
	      ],
	      "definition": "sll $at $reg2 op(32-(val));srl $reg1 $reg2 val;or $reg1 $reg1 $at;"
	    },
	    {
	      "name": "rol",
	      "signature_definition": "rol $F1 $F0 F2",
	      "signature": "rol,$INT-Reg,$INT-Reg,inm-unsigned",
	      "signatureRaw": "rol $reg1 $reg2 val",
	      "nwords": 1,
	      "fields": [
	        {
	          "name": "reg2",
	          "type": "INT-Reg",
	          "startbit": "25",
	          "stopbit": "21"
	        },
	        {
	          "name": "reg1",
	          "type": "INT-Reg",
	          "startbit": "20",
	          "stopbit": "16"
	        },
	        {
	          "name": "val",
	          "type": "inm-unsigned",
	          "startbit": "15",
	          "stopbit": "0"
	        }
	      ],
	      "definition": "srl $at $reg2 op(32-(val));sll $reg1 $reg2 val;or $reg1 $reg1 $at;"
	    }
  ],
  "directives": [
    {
      "name": ".data",
      "action": "data_segment",
      "size": null
    },
    {
      "name": ".text",
      "action": "code_segment",
      "size": null
    },
    {
      "name": ".globl",
      "action": "global_symbol",
      "size": null
    },
    {
      "name": ".byte",
      "action": "byte",
      "size": 1
    },
    {
      "name": ".half",
      "action": "half_word",
      "size": 2
    },
    {
      "name": ".word",
      "action": "word",
      "size": 4
    },
    {
      "name": ".doubleword",
      "action": "double_word",
      "size": 8
    },
    {
      "name": ".float",
      "action": "float",
      "size": 4
    },
    {
      "name": ".double",
      "action": "double",
      "size": 8
    },
    {
      "name": ".space",
      "action": "space",
      "size": 1
    },
    {
      "name": ".ascii",
      "action": "ascii_not_null_end",
      "size": null
    },
    {
      "name": ".asciiz",
      "action": "ascii_null_end",
      "size": null
    },
    {
      "name": ".align",
      "action": "align",
      "size": null
    }
  ],
  "memory_layout": [
    {
      "name": "text start",
      "value": 0
    },
    {
      "name": "text end",
      "value": 2097151
    },
    {
      "name": "data start",
      "value": 2097152
    },
    {
      "name": "data end",
      "value": 96206015
    },
    {
      "name": "stack start",
      "value": 268435452
    },
    {
      "name": "stack end",
      "value": 268435455
    }
  ]
}
